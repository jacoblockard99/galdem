---
import {Image, getImage} from 'astro:assets';
import logo from '../images/picture.png';

import {strapi} from '@strapi/client';
import * as fs from "node:fs";
import * as path from "node:path";
import {Readable} from 'stream';
import {finished} from 'stream/promises';

import {marked} from 'marked';
import {imageSizeFromFile} from "image-size/fromFile";
import sharp from 'sharp';

interface GalleryImage {
  Caption: string;
  File: string;
  ThumbFile: string;
  Description: string;
  Width: number;
  Height: number;
}

const client = strapi({
  baseURL: import.meta.env.STRAPI_ENDPOINT + '/api/',
  auth: import.meta.env.STRAPI_TOKEN
});
const gallery = client.collection('gallery-images');
const imagesRes = await gallery.find({
  populate: '*'
});

const images: GalleryImage[] = await Promise.all(imagesRes.data.map(async (imageRes) => {
  const img = imageRes.Image;
  const name = img.hash + '.downloaded' + img.ext;
  const thumbName = img.hash + '.thumb.downloaded' + img.ext;
  const file = path.resolve("public/images/gallery", name);
  const thumbFile = path.resolve('public/images/gallery', thumbName);

  if (!fs.existsSync(file)) {
    console.log(`Downloading to ${file}`);
    const res = await fetch(import.meta.env.STRAPI_ENDPOINT + img.url);
    const fileStream = fs.createWriteStream(file, {flags: 'wx'});
    await finished(Readable.fromWeb(res.body as any).pipe(fileStream));
  }

  let {width: w, height: h} = await imageSizeFromFile(file);

  console.log(`Resizing to ${thumbFile}`);
  await sharp(file)
    .resize(300, 300, { fit: 'cover' })
    .toFile(thumbFile);

  return {
    Caption: imageRes.Caption,
    Description: imageRes.Description ? marked.parse(imageRes.Description) : '',
    File: '/images/gallery/' + name,
    ThumbFile: '/images/gallery/' + thumbName
  };
}));
---

<html lang="en">
<head>
  <meta charset="utf-8"/>
  <link rel="icon" type="image/svg+xml" href="/favicon.svg"/>
  <meta name="viewport" content="width=device-width"/>
  <meta name="generator" content={Astro.generator}/>
  <title>Gallery Demo</title>
</head>
<body>
<div class="nav">
  <Image src={logo} width="32" alt="Logo"/>
  <h1>Gallery Demo</h1>
</div>
<div class="container">
  {images.map(image => (
      <a class="image" href={image.File}>
        <img src={image.ThumbFile} alt={image.Caption} width="300" height="300" />
        <h2>{image.Caption}</h2>
        <div class="text" set:html={image.Description}></div>
      </a >
  ))}
</div>
</body>
</html>

<style>
  html, body {
    font-family: Arial, sans-serif;
    color: #333;
    margin: 0;
    padding: 0
  }

  .nav {
    background: #ddd;
    padding: 20px;
    display: flex;
    align-items: center;
  }

  .container {
    padding: 50px;
    max-width: 1000px;
    margin: 0 auto;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
  }

  .image {
    width: 300px;
    height: 300px;
    margin-left: 5px;
    margin-right: 5px;
    display: block;
    text-decoration: none;
    color: inherit;

    img {
      width: 300px;
      height: 300px;
      object-fit: cover;
    }
  }

  h1 {
    margin: 0 0 0 10px;
    font-size: 22px;
  }

  h2 {
    font-size: 16px;
  }

  .text {
    font-size: 12px;
    color: #444;
  }
</style>
